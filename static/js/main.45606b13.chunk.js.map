{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions .js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["Statistics","good","neutral","bad","total","positiveFeedbackPercentage","FeedbackOptions","goodIncrement","neutralIncrement","badIncrement","onClick","Section","title","children","App","state","e","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAYeA,EAVI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,IAAIC,EAAnB,EAAmBA,MAAMC,EAAzB,EAAyBA,2BAAzB,OACX,+BACI,6BAAI,uCAAUJ,OACd,6BAAI,0CAAaC,OACjB,6BAAI,uCAAUC,OACd,6BAAI,wCAAWC,OACf,6BAAI,qDAA6D,kBAA9BC,GAAyCA,EAAyCA,EAA2B,IAAzC,uBCApGC,EANS,SAAC,GAAD,IAAEC,EAAF,EAAEA,cAAcC,EAAhB,EAAgBA,iBAAiBC,EAAjC,EAAiCA,aAAjC,OACpB,+BACM,6BAAI,wBAAQC,QAASH,EAAjB,oBACJ,6BAAI,wBAAQG,QAASF,EAAjB,uBACJ,6BAAI,wBAAQE,QAASD,EAAjB,uBCICE,G,MANC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,oCACI,6BAAKD,IACHC,OC+CKC,E,4MAhDbC,MAAQ,CACRd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAELI,cAAgB,SAACS,GACf,EAAKC,UAAS,SAACC,GACb,MAAO,CACLjB,KAAOiB,EAAUjB,KAAO,O,EAI9BO,iBAAmB,SAACQ,GAClB,EAAKC,UAAS,SAACC,GACb,MAAO,CACLhB,QAAUgB,EAAUhB,QAAU,O,EAIpCO,aAAe,SAACO,GACd,EAAKC,UAAS,SAACC,GACb,MAAO,CACLf,IAAMe,EAAUf,IAAM,O,EAI5BgB,mBAAqB,WACnB,OAAO,EAAKJ,MAAMd,KAAO,EAAKc,MAAMb,QAAU,EAAKa,MAAMZ,K,EAE3DiB,gCAAkC,WACjC,OAASC,KAAKC,MAAM,EAAKP,MAAMd,MAAM,EAAKkB,qBAAqB,O,4CAEhE,WACE,OACE,gCACE,cAAC,EAAD,CAASP,MAAQ,wBAAjB,SACI,cAAC,EAAD,CAAiBL,cAAegB,KAAKhB,cAAeC,iBAAkBe,KAAKf,iBAAkBC,aAAcc,KAAKd,iBAEpH,cAAC,EAAD,CAASG,MAAM,YAAf,SACkC,GAA7BW,KAAKJ,qBAA0B,mDAA2B,cAAC,EAAD,CAAYlB,KAAMsB,KAAKR,MAAMd,KAAMC,QAASqB,KAAKR,MAAMb,QAASC,IAAOoB,KAAKR,MAAMZ,IAAKC,MAASmB,KAAKJ,qBAAsBd,2BAA8BkB,KAAKH,6C,GAxCnNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.45606b13.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from './Statistics.module.css'\r\nconst Statistics = ({good,neutral,bad,total,positiveFeedbackPercentage}) => (\r\n        <ul>\r\n            <li><p>Good :{good }</p></li>\r\n            <li><p>Neutral :{neutral}</p></li>\r\n            <li><p>Bad : {bad}</p></li>\r\n            <li><p>Total :{total}</p></li>\r\n            <li><p>Positive feedback : {typeof positiveFeedbackPercentage ==='number'&&!positiveFeedbackPercentage?' No reviews':positiveFeedbackPercentage+'%'}</p></li>\r\n        </ul>\r\n)\r\n\r\nexport default Statistics","import React from 'react'\r\n\r\nconst FeedbackOptions = ({goodIncrement,neutralIncrement,badIncrement}) => (\r\n    <ul>\r\n          <li><button onClick={goodIncrement}>good</button></li>\r\n          <li><button onClick={neutralIncrement}>neutral</button></li>\r\n          <li><button onClick={badIncrement}>bad</button></li>\r\n    </ul>)\r\nexport default FeedbackOptions;","import React from 'react'\r\nimport styles from './Section.module.css'\r\n\r\n\r\nconst Section = ({title ,children }) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n         {children }\r\n    </section>\r\n)\r\nexport default Section;","import './App.css';\nimport React, { Component } from 'react'\nimport Statistics from './components/Statistics/Statistics.js'\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions '\nimport Section from './components/Section/Section'\nclass App extends Component {\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n  }\n  goodIncrement = (e) => {\n    this.setState((prevState) => {\n      return {\n        good : prevState.good + 1\n      }\n    })\n  }\n  neutralIncrement = (e) => {\n    this.setState((prevState) => {\n      return {\n        neutral : prevState.neutral + 1\n      }\n    })\n  }\n  badIncrement = (e) => {\n    this.setState((prevState) => {\n      return {\n        bad : prevState.bad + 1\n      }\n    })\n  }\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad\n  }\n  countPositiveFeedbackPercentage = () => {\n   return   Math.round(this.state.good/(this.countTotalFeedback()/100))\n  }\n  render() {\n    return (\n      <div>\n        <Section title = 'Please leave feedback'>\n            <FeedbackOptions goodIncrement={this.goodIncrement} neutralIncrement={this.neutralIncrement} badIncrement={this.badIncrement} />\n        </Section>\n        <Section title='Statistic'  >\n            {this.countTotalFeedback() == 0?<h3>no feedback given</h3>:<Statistics good={this.state.good} neutral={this.state.neutral} bad = {this.state.bad} total = {this.countTotalFeedback()} positiveFeedbackPercentage = {this.countPositiveFeedbackPercentage()} />}\n        </Section>\n      </div>\n\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}